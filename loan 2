import React, { useState } from 'react';
import {
  Card,
  CardContent,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField,
  Typography,
  Grid,
  IconButton,
  Paper,
} from '@mui/material';
import { makeStyles } from '@mui/styles';
import EditIcon from '@mui/icons-material/Edit';
import DeleteIcon from '@mui/icons-material/Delete';
import ViewIcon from '@mui/icons-material/Visibility';

const useStyles = makeStyles({
  root: {
    padding: '20px',
  },
  card: {
    margin: '10px 0',
    padding: '20px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
  },
  details: {
    display: 'flex',
    flexDirection: 'column',
    gap: '10px',
  },
  actions: {
    display: 'flex',
    gap: '10px',
  },
  buttonGroup: {
    marginTop: '20px',
    display: 'flex',
    justifyContent: 'flex-end',
  },
  dialogContent: {
    display: 'flex',
    flexDirection: 'column',
    gap: '20px',
  },
});

const LoanCard = ({ loan, onEdit, onDelete, onView }) => {
  const classes = useStyles();
  const [openDialog, setOpenDialog] = useState(false);

  const handleOpenDialog = () => {
    setOpenDialog(true);
  };

  const handleCloseDialog = () => {
    setOpenDialog(false);
  };

  return (
    <>
      <Card className={classes.card} elevation={3}>
        <div className={classes.details}>
          <Typography variant="h6" color="primary">
            Loan ID: {loan.id}
          </Typography>
          <Typography variant="body1">
            Loan Type: {loan.type}
          </Typography>
          <Typography variant="body1">
            Loan Duration: {loan.duration}
          </Typography>
        </div>
        <div className={classes.actions}>
          <IconButton onClick={() => onView(loan)}>
            <ViewIcon />
          </IconButton>
          <IconButton onClick={() => onEdit(loan)}>
            <EditIcon />
          </IconButton>
          <IconButton onClick={() => onDelete(loan.id)}>
            <DeleteIcon />
          </IconButton>
        </div>
      </Card>

      <Dialog open={openDialog} onClose={handleCloseDialog}>
        <DialogTitle>Loan Details</DialogTitle>
        <DialogContent className={classes.dialogContent}>
          <Typography variant="body1">
            Loan ID: {loan.id}
          </Typography>
          <Typography variant="body1">
            Loan Type: {loan.type}
          </Typography>
          <Typography variant="body1">
            Loan Duration: {loan.duration}
          </Typography>
          {/* Add more loan details here */}
        </DialogContent>
        <DialogActions>
          <Button onClick={handleCloseDialog}>Close</Button>
        </DialogActions>
      </Dialog>
    </>
  );
};

const Loans = () => {
  const sampleLoans = [
    { id: 1, type: 'Personal Loan', duration: '12 months' },
    { id: 2, type: 'Home Loan', duration: '24 months' },
    // Add more sample loans
  ];

  const [loans, setLoans] = useState(sampleLoans);

  const handleDeleteLoan = (loanId) => {
    setLoans(loans.filter((loan) => loan.id !== loanId));
  };

  const handleEditLoan = (loan) => {
    // Implement edit logic here
  };

  const handleViewLoan = (loan) => {
    // Implement view logic here
  };

  return (
    <div className={classes.root}>
      <Button variant="contained" color="primary">
        Add New Loan
      </Button>
      <div>
        {loans.map((loan) => (
          <LoanCard
            key={loan.id}
            loan={loan}
            onDelete={handleDeleteLoan}
            onEdit={handleEditLoan}
            onView={handleViewLoan}
          />
        ))}
      </div>
    </div>
  );
};

export default Loans;
