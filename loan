import React, { useState } from 'react';
import { Card, CardContent, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@mui/material';

const LoanCard = ({ loan, onDelete, onUpdate }) => {
  const [openDetails, setOpenDetails] = useState(false);
  const [openEdit, setOpenEdit] = useState(false);
  const [editedLoan, setEditedLoan] = useState({ ...loan });

  const handleDelete = () => {
    onDelete(loan.id);
  };

  const handleOpenDetails = () => {
    setOpenDetails(true);
  };

  const handleCloseDetails = () => {
    setOpenDetails(false);
  };

  const handleOpenEdit = () => {
    setOpenEdit(true);
  };

  const handleCloseEdit = () => {
    setOpenEdit(false);
  };

  const handleUpdate = () => {
    onUpdate(editedLoan);
    setOpenEdit(false);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setEditedLoan((prevLoan) => ({
      ...prevLoan,
      [name]: value,
    }));
  };

  return (
    <Card>
      <CardContent>
        <p>{loan.name}</p>
        {/* Display other loan fields */}
        <Button onClick={handleOpenDetails}>View</Button>
        <Button onClick={handleOpenEdit}>Edit</Button>
        <Button onClick={handleDelete}>Delete</Button>
      </CardContent>

      {/* View Details Popup */}
      <Dialog open={openDetails} onClose={handleCloseDetails}>
        <DialogTitle>Loan Details</DialogTitle>
        <DialogContent>
          {/* Display loan details */}
        </DialogContent>
        <DialogActions>
          <Button onClick={handleCloseDetails}>Close</Button>
        </DialogActions>
      </Dialog>

      {/* Edit Popup */}
      <Dialog open={openEdit} onClose={handleCloseEdit}>
        <DialogTitle>Edit Loan</DialogTitle>
        <DialogContent>
          <TextField label="Name" name="name" value={editedLoan.name} onChange={handleInputChange} />
          {/* Add other fields for editing */}
        </DialogContent>
        <DialogActions>
          <Button onClick={handleUpdate}>Save</Button>
          <Button onClick={handleCloseEdit}>Cancel</Button>
        </DialogActions>
      </Dialog>
    </Card>
  );
};

const Loans = () => {
  const sampleLoans = [
    { id: 1, name: 'Loan A', amount: 1000, interestRate: 5 },
    { id: 2, name: 'Loan B', amount: 2000, interestRate: 3 },
    { id: 3, name: 'Loan C', amount: 1500, interestRate: 4 },
  ];

  const [loans, setLoans] = useState(sampleLoans);

  const handleDeleteLoan = (loanId) => {
    setLoans(loans.filter((loan) => loan.id !== loanId));
  };

  const handleUpdateLoan = (updatedLoan) => {
    setLoans((prevLoans) =>
      prevLoans.map((loan) => (loan.id === updatedLoan.id ? updatedLoan : loan))
    );
  };

  return (
    <div>
      {loans.map((loan) => (
        <LoanCard key={loan.id} loan={loan} onDelete={handleDeleteLoan} onUpdate={handleUpdateLoan} />
      ))}
    </div>
  );
};

export default Loans;
